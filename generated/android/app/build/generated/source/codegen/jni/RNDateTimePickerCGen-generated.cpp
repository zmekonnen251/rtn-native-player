
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateModuleJniCpp.js
 */

#include "RNDateTimePickerCGen.h"

namespace facebook::react {

static facebook::jsi::Value __hostFunction_NativeModuleDatePickerSpecJSI_dismiss(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "dismiss", "(Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeModuleDatePickerSpecJSI_open(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "open", "(Lcom/facebook/react/bridge/ReadableMap;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

NativeModuleDatePickerSpecJSI::NativeModuleDatePickerSpecJSI(const JavaTurboModule::InitParams &params)
  : JavaTurboModule(params) {
  methodMap_["dismiss"] = MethodMetadata {0, __hostFunction_NativeModuleDatePickerSpecJSI_dismiss};
  methodMap_["open"] = MethodMetadata {1, __hostFunction_NativeModuleDatePickerSpecJSI_open};
}
static facebook::jsi::Value __hostFunction_NativeModuleTimePickerSpecJSI_dismiss(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "dismiss", "(Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeModuleTimePickerSpecJSI_open(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "open", "(Lcom/facebook/react/bridge/ReadableMap;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

NativeModuleTimePickerSpecJSI::NativeModuleTimePickerSpecJSI(const JavaTurboModule::InitParams &params)
  : JavaTurboModule(params) {
  methodMap_["dismiss"] = MethodMetadata {0, __hostFunction_NativeModuleTimePickerSpecJSI_dismiss};
  methodMap_["open"] = MethodMetadata {1, __hostFunction_NativeModuleTimePickerSpecJSI_open};
}

std::shared_ptr<TurboModule> RNDateTimePickerCGen_ModuleProvider(const std::string &moduleName, const JavaTurboModule::InitParams &params) {
  if (moduleName == "RNCDatePicker") {
    return std::make_shared<NativeModuleDatePickerSpecJSI>(params);
  }
  if (moduleName == "RNCTimePicker") {
    return std::make_shared<NativeModuleTimePickerSpecJSI>(params);
  }
  return nullptr;
}

} // namespace facebook::react
